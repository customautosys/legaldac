{"version":3,"file":"index.mjs","sources":["../src/functions/cli.ts","../src/classes/ArchiveFolderClauseRepository.ts","../src/classes/LegaldacXmlScript.ts","../src/classes/LegaldacClauseXmlScript.ts","../src/classes/LegaldacDocumentXmlScript.ts","../src/classes/LegaldacDocument7Z.ts","../src/index.ts"],"sourcesContent":["import {Command} from 'commander';\nimport package_json from '../../package.json';\n\nexport function cli(){\n\tconst program=new Command();\n\tprogram\n\t\t.version(package_json.version)\n\t\t.name('legaldac')\n\t\t.option('-d, --debug','enables verbose logging',false)\n\t\t.option('-v, --verbose','enables verbose logging',false)\n\t\t.argument('<input-filename>','the input filename')\n\t\t.parse(process.argv);\n\treturn;\n};\n\nexport default cli;","import semver from 'semver';\nimport type ArchiveFolder from '../interfaces/ArchiveFolder';\nimport type ClauseReference from '../interfaces/ClauseReference';\nimport type ClauseRepository from '../interfaces/ClauseRepository';\nimport type ClauseData from '../interfaces/ClauseData';\n\nexport class ArchiveFolderClauseRepository implements ClauseRepository{\n\tconstructor(protected archiveFiles:ArchiveFolder){}\n\n\tgetClauseIdentifier(clauseReference:ClauseReference){\n\t\tlet errors='';\n\t\tif(typeof clauseReference.id!=='string')errors+='\\nClause reference tag id must be a string';\n\t\tif(!semver.validRange(clauseReference.version))errors+='\\nClause reference tag id '+String(clauseReference.id)+' does not have a version attribute in the format [^]<number>.<number>.<number> or other valid semver range format';\n\t\tif(errors)throw new Error('Errors:'+errors);\n\t\tlet matchingFolders=Object.keys(this.archiveFiles).filter(filename=>filename.startsWith(clauseReference.id+'@')&&!(this.archiveFiles[filename] instanceof File));\n\t\tif(matchingFolders.length<=0)throw new Error('No clause folders matching id '+clauseReference.id);\n\t\tmatchingFolders.sort((folder1,folder2)=>semver.compare(folder1.split('@')[1],folder2.split('@')[1]));\n\t\tlet identifier='';\n\t\tfor(let i=matchingFolders.length;--i>=0;){\n\t\t\tif(semver.satisfies(matchingFolders[i].split('@')[1],clauseReference.version)){\n\t\t\t\tidentifier=matchingFolders[i];\n\t\t\t}\n\t\t}\n\t\treturn identifier;\n\t}\n\n\tasync getClauseData(clauseReference:ClauseReference){\n\t\tlet errors='';\n\t\tlet identifier=this.getClauseIdentifier(clauseReference);\n\t\tif(!identifier)throw new Error('No clause folders for '+clauseReference.id+' satisfying version '+clauseReference.version);\n\t\tlet lcxsFilenames=Object.keys(this.archiveFiles[identifier]).filter(filename=>filename.toLowerCase().endsWith('.lcxs'));\n\t\tif(lcxsFilenames.length<1)throw new Error('No LCXS LEGAL-DAC Clause XML Script found');\n\t\tif(lcxsFilenames.length>1)throw new Error('More than 1 LCXS LEGAL-DAC Clause XML Script found when only 1 is allowed');\n\t\tlet lcxs:File|null=null;\n\t\tif(!((this.archiveFiles[identifier] as ArchiveFolder)[lcxsFilenames[0]] instanceof File))errors+='\\nInvalid file '+lcxsFilenames[0];\n\t\telse lcxs=(this.archiveFiles[identifier] as ArchiveFolder)[lcxsFilenames[0]] as File;\n\t\tlet scriptFilenames=Object.keys(this.archiveFiles[identifier]).filter(filename=>filename.toLowerCase().endsWith('.ts')||filename.toLowerCase().endsWith('.js'));\n\t\tfor(let i=scriptFilenames.length;--i>=0;){\n\t\t\tif(!((this.archiveFiles[identifier] as ArchiveFolder)[scriptFilenames[i]] instanceof File)){\n\t\t\t\terrors+='\\nInvalid file '+scriptFilenames[i];\n\t\t\t\tscriptFilenames.splice(i,1);\n\t\t\t}\n\t\t}\n\t\tlet results=await Promise.allSettled([...(lcxs?[lcxs.text()]:[]),...scriptFilenames.map(scriptFilename=>(this.archiveFiles[scriptFilename] as File).text())]);\n\t\tresults.filter(result=>result.status==='rejected').forEach(rejected=>errors+='\\n'+(rejected as PromiseRejectedResult).status);\n\t\tif(errors)throw new Error('Errors:'+errors);\n\t\treturn <ClauseData>{\n\t\t\tidentifier,\n\t\t\txml:(results[0] as PromiseFulfilledResult<string>).value,\n\t\t\tscripts:Object.fromEntries(results.slice(1).map((result,index)=>[scriptFilenames[index],(result as PromiseFulfilledResult<string>).value]))\n\t\t};\n\t}\n};\n\nexport default ArchiveFolderClauseRepository;","import{\n\tX2jOptions,\n\tXMLParser\n}from 'fast-xml-parser';\nimport semver from 'semver';\nimport package_json from '../../package.json';\nimport type PreserveOrderXmlNode from '../interfaces/PreserveOrderXmlNode';\nimport type ClauseReference from '../interfaces/ClauseReference';\nimport type InputParameter from '../interfaces/InputParameter';\nimport type ClauseRepository from '../interfaces/ClauseRepository';\nimport type ClauseData from '../interfaces/ClauseData';\nimport type OutputReturn from '../interfaces/OutputReturn';\nimport type ParseOutputReturn from '../interfaces/ParseOutputReturn';\nimport type OutputDocumentTag from '../interfaces/OutputDocumentTag';\n\nexport abstract class LegaldacXmlScript{\n\tprotected static readonly XML_PARSER_OPTIONS:X2jOptions={\n\t\talwaysCreateTextNode:true,\n\t\tpreserveOrder:true,\n\t\tignoreAttributes:false,\n\t\tallowBooleanAttributes:true,\n\t\tprocessEntities:true,\n    \thtmlEntities:true\n\t};\n\tprotected static readonly xmlParser=new XMLParser(LegaldacXmlScript.XML_PARSER_OPTIONS);\n\n\tprotected parsedXml:PreserveOrderXmlNode[]=[];\n\tprotected version='';\n\tprotected clauseReferences:ClauseReference[]=[];\n\tprotected clauseDatas:ClauseData[]=[];\n\tprotected inputParameters:InputParameter[]=[];\n\tprotected outputReturns:OutputReturn[]=[];\n\n\tasync parse(xml:string,clauseRepository:ClauseRepository,rootNodeName:string){\n\t\tlet errors='';\n\t\tlet warnings='';\n\t\tlet parsedXml:PreserveOrderXmlNode[]=LegaldacXmlScript.xmlParser.parse(xml);\n\t\tlet rootNodes=parsedXml.filter(node=>node[rootNodeName]);\n\t\tif(rootNodes.length<1)throw new Error('No root '+rootNodeName+' tag');\n\t\tif(rootNodes.length>1)warnings+='\\nMore than 1 root '+rootNodeName+' tag found when only 1 is allowed, only parsing 1st '+rootNodeName+' tag';\n\t\tlet version=String(rootNodes[0][':@']?.version);\n\t\tif(!semver.valid(version))warnings+='\\nAll root '+rootNodeName+' tags must have a version attribute in the format <number>.<number>.<number>';\n\t\tlet legaldacversion=String(rootNodes[0][':@']?.legaldacversion);\n\t\tif(!semver.valid(legaldacversion))warnings+='\\nAll root '+rootNodeName+' tags must have a legaldacversion attribute in the format <number>.<number>.<number>';\n\t\tif(semver.gt(legaldacversion,package_json.version))warnings+='\\nlegaldacversion is newer than this version of LEGAL-DAC';\n\t\tlet rootNode=rootNodes[0].document;\n\t\tlet clausesNodes=rootNode.filter(node=>node['clauses']);\n\t\tif(clausesNodes.length>1)warnings+='More than 1 clauses tag found under root '+rootNodeName+' tag when at most 1 is allowed, only parsing 1st clauses tag';\n\t\tlet clauseReferences:ClauseReference[]=[];\n\t\tlet clauseDatas:{[key:string]:ClauseData}={};\n\t\tif(clausesNodes.length>=1){\n\t\t\tlet clauseReferenceNodes=clausesNodes[0].clauses.filter(node=>node['clause']);\n\t\t\tlet results=await Promise.allSettled(clauseReferenceNodes.map(async clauseReferenceNode=>{\n\t\t\t\tlet clauseReference:ClauseReference={\n\t\t\t\t\tid:clauseReferenceNode[':@']?.id,\n\t\t\t\t\tversion:String(clauseReferenceNode[':@']?.version)\n\t\t\t\t};\n\t\t\t\tlet clauseData=await clauseRepository.getClauseData(clauseReference);\n\t\t\t\treturn {clauseData,clauseReference};\n\t\t\t}));\n\t\t\tresults.forEach(result=>{\n\t\t\t\tif(result.status==='fulfilled'){\n\t\t\t\t\tclauseDatas[result.value.clauseData.identifier]=result.value.clauseData;\n\t\t\t\t\tclauseReferences.push(result.value.clauseReference);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\terrors+='\\n'+result.reason;\n\t\t\t});\n\t\t}\n\t\tlet inputParameters:InputParameter[]=[];\n\t\tlet parseOutputReturn:ParseOutputReturn|null=null;\n\t\tlet generationNodes=rootNode.filter(node=>node['generation']);\n\t\tif(generationNodes.length<1)errors+='\\nNo generation tag found';\n\t\tif(generationNodes.length>1)warnings+='\\nMore than 1 generation tag found when only 1 is allowed, only parsing 1st generation tag';\n\t\tif(generationNodes.length>=1){\n\t\t\t//input section\n\t\t\tlet inputNodes=generationNodes[0].generation.filter(node=>node['input']);\n\t\t\tif(inputNodes.length>1)warnings+='\\nMore than 1 input tag found when at most 1 is allowed, only parsing 1st input tag';\n\t\t\tif(inputNodes.length>=1){\n\t\t\t\tlet parameterNodes=inputNodes[0].input.filter(node=>node['parameter']);\n\t\t\t\tif(parameterNodes.length>=1){\n\t\t\t\t\tfor(let i=0;i<parameterNodes.length;++i){\n\t\t\t\t\t\tlet name=parameterNodes[i][':@'].name;\n\t\t\t\t\t\tif(typeof name!=='string'||!name){\n\t\t\t\t\t\t\terrors+='\\nInvalid name of input parameter';\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(inputParameters.findIndex(inputParameter=>inputParameter.name===name)>=0){\n\t\t\t\t\t\t\twarnings+='\\nDuplicate input parameter '+name+', ignoring duplicates after 1st parameter tag';\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet type:'string'|'number'|'boolean'='string';\n\t\t\t\t\t\tif(parameterNodes[i][':@'].type==='number'||parameterNodes[i][':@'].type==='boolean'){\n\t\t\t\t\t\t\tparameterNodes[i][':@'].type='string';\n\t\t\t\t\t\t}else if(parameterNodes[i][':@'].type!=='string'){\n\t\t\t\t\t\t\twarnings='\\nInvalid type of input parameter '+name+', defaulting to string';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet prompt=parameterNodes[i].parameter.filter(text=>text['#text']).map(text=>text['#text']).join(' ');\n\t\t\t\t\t\tif(typeof prompt!=='string'||!prompt){\n\t\t\t\t\t\t\twarnings+='Invalid prompt of input parameter '+name+', setting prompt to name';\n\t\t\t\t\t\t\tprompt=name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputParameters.push({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tprompt\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//output section\n\t\t\tparseOutputReturn=await this.parseOutput(generationNodes,parsedXml,inputParameters,clauseRepository);\n\t\t\terrors+=String(parseOutputReturn.errors);\n\t\t\twarnings+=String(parseOutputReturn.warnings);\n\t\t}\n\t\tif(!parseOutputReturn)errors+='\\nNo parsed output section';\n\t\tif(errors)throw new Error('Errors:'+errors+'\\n\\nWarnings:'+warnings);\n\t\tthis.parsedXml=parsedXml;\n\t\tthis.version=version;\n\t\tthis.clauseReferences=clauseReferences;\n\t\tthis.inputParameters=inputParameters;\n\t\tif(parseOutputReturn){\n\t\t\tthis.outputReturns=parseOutputReturn.outputReturns;\n\t\t\tif(this.setParseOutputReturn)this.setParseOutputReturn(parseOutputReturn);\n\t\t}\n\t\tif(warnings)return 'Warnings:'+warnings;\n\t}\n\n\tabstract parseOutput(generationNodes:PreserveOrderXmlNode[],parsedXml:PreserveOrderXmlNode[],inputParameters:InputParameter[],clauseRepository:ClauseRepository):Promise<ParseOutputReturn>|ParseOutputReturn;\n\n\tsetParseOutputReturn?(parseOutputReturn:ParseOutputReturn):any;\n};\n\nexport default LegaldacXmlScript;","import LegaldacXmlScript from './LegaldacXmlScript';\nimport type ClauseRepository from '../interfaces/ClauseRepository';\nimport type InputParameter from '../interfaces/InputParameter';\nimport type PreserveOrderXmlNode from '../interfaces/PreserveOrderXmlNode';\nimport type OutputReturn from '../interfaces/OutputReturn';\n\nexport class LegaldacClauseXmlScript extends LegaldacXmlScript{\n\tasync parse(xml:string,clauseRepository:ClauseRepository){\n\t\treturn super.parse(xml,clauseRepository,'clause');\n\t}\n\n\tasync parseOutput(generationNodes:PreserveOrderXmlNode[],parsedXml:PreserveOrderXmlNode[],inputParameters:InputParameter[],clauseRepository:ClauseRepository){\n\t\tlet errors='';\n\t\tlet warnings='';\n\t\tlet outputReturns:OutputReturn[]=[];\n\t\tlet outputNodes=generationNodes[0].generation.filter(node=>node['output']);\n\t\tif(outputNodes.length<1)errors+='\\nNo output tag found';\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns\n\t\t};\n\t\tif(outputNodes.length>1)warnings+='\\nMore than 1 output tag found when only 1 is allowed, only parsing 1st output tag';\n\t\tlet returnNodes=outputNodes[0].output.filter(node=>node['return']);\n\t\tif(returnNodes.length>2)errors+='\\nMore than 2 return tags found when only either 1 or 2 are allowed';\n\t\tif(returnNodes.length<1)errors+='\\nNo return tags found';\n\t\tif(\n\t\t\treturnNodes.length===2&&!(\n\t\t\t\t(\n\t\t\t\t\t(\n\t\t\t\t\t\treturnNodes[0]?.[':@']?.type==='string'||\n\t\t\t\t\t\t!returnNodes[0]?.[':@']?.type\n\t\t\t\t\t)&&\n\t\t\t\t\treturnNodes[1]?.[':@']?.type==='OOXML'\n\t\t\t\t)||(\n\t\t\t\t\t(\n\t\t\t\t\t\treturnNodes[1]?.[':@']?.type==='string'||\n\t\t\t\t\t\t!returnNodes[1]?.[':@']?.type\n\t\t\t\t\t)&&\n\t\t\t\t\treturnNodes[0]?.[':@']?.type==='OOXML'\n\t\t\t\t)\n\t\t\t)\n\t\t){\n\t\t\terrors+='\\nIf there are 2 return tags in a clause, exactly 1 must have the type of string and 1 must have the type of OOXML';\n\t\t}\n\t\tif(returnNodes.length===1&&(returnNodes[0]?.[':@']?.type!=='string'||!returnNodes[0]?.[':@']?.type)&&returnNodes[0]?.[':@']?.type!=='OOXML'){\n\t\t\terrors+='\\nThe return type must be either string or OOXML';\n\t\t}\n\t\tif(returnNodes.filter(returnNode=>!returnNode?.[':@']?.variable).length>0){\n\t\t\terrors+='\\nNo variable specified in return tag';\n\t\t}\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns\n\t\t};\n\t\toutputReturns=returnNodes.map(returnNode=>({\n\t\t\ttype:returnNode?.[':@']?.type==='OOXML'?'OOXML':'string',\n\t\t\tvariable:returnNode[':@'].variable\n\t\t}));\n\t\treturn{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns\n\t\t};\n\t}\n};\n\nexport default LegaldacClauseXmlScript;","import LegaldacXmlScript from './LegaldacXmlScript';\nimport type ClauseRepository from '../interfaces/ClauseRepository';\nimport type InputParameter from '../interfaces/InputParameter';\nimport type PreserveOrderXmlNode from '../interfaces/PreserveOrderXmlNode';\nimport type DocumentOutputReturn from '../interfaces/DocumentOutputReturn';\nimport type ParseOutputReturn from '../interfaces/ParseOutputReturn';\nimport type OutputDocumentTag from '../interfaces/OutputDocumentTag';\n\nexport class LegaldacDocumentXmlScript extends LegaldacXmlScript{\n\tdeclare protected outputReturns:DocumentOutputReturn[];\n\toutputDocumentTag:OutputDocumentTag={\n\t\ttype:'constant',\n\t\tvalue:''\n\t};\n\treturnAllInputs=true;\n\treturnAllVariables=true;\n\n\tasync parse(xml:string,clauseRepository:ClauseRepository){\n\t\treturn super.parse(xml,clauseRepository,'document');\n\t}\n\n\tasync parseOutput(generationNodes:PreserveOrderXmlNode[],parsedXml:PreserveOrderXmlNode[],inputParameters:InputParameter[],clauseRepository:ClauseRepository){\n\t\tlet errors='';\n\t\tlet warnings='';\n\t\tlet outputReturns:DocumentOutputReturn[]=[];\n\t\tlet outputNodes=generationNodes[0].generation.filter(node=>node['output']);\n\t\tif(outputNodes.length<1)errors+='\\nNo output tag found';\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns\n\t\t};\n\t\tif(outputNodes.length>1)warnings+='\\nMore than 1 output tag found when only 1 is allowed, only parsing 1st output tag';\n\t\tlet returnAllInputs=outputNodes[0]?.[':@']?.returnAllInputs==='false'?false:true;\n\t\tlet returnAllVariables=outputNodes[0]?.[':@']?.returnAllVariables==='false'?false:true;\n\t\tlet documentNodes=outputNodes[0].output.filter(node=>node['document']);\n\t\tif(documentNodes.length<1)errors+='\\nNo document tag found';\n\t\tif(documentNodes.length>1)warnings+='\\nMore than 1 document tag found when only 1 is allowed, only parsing 1st document tag';\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns,\n\t\t\treturnAllInputs,\n\t\t\treturnAllVariables\n\t\t};\n\t\tif(\n\t\t\t(\n\t\t\t\t!documentNodes[0]?.[':@']?.constant&&\n\t\t\t\tdocumentNodes[0]?.[':@']?.variable\n\t\t\t)||(\n\t\t\t\tString(documentNodes[0]?.[':@']?.constant).toLowerCase().endsWith('.docx')&&\n\t\t\t\t!documentNodes[0]?.[':@']?.variable\n\t\t\t)\n\t\t){\n\t\t\terrors+='\\nDocument tag must either have a constant attribute which ends in .docx, or a variable attribute';\n\t\t}\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns,\n\t\t\treturnAllInputs,\n\t\t\treturnAllVariables\n\t\t};\n\t\tlet outputDocumentTag:OutputDocumentTag={\n\t\t\ttype:documentNodes[0]?.[':@']?.variable?'variable':'constant',\n\t\t\tvalue:documentNodes[0]?.[':@']?.variable?documentNodes[0][':@'].variable:documentNodes[0]?.[':@']?.constant\n\t\t};\n\t\tlet returnNodes=outputNodes[0].output.filter(node=>node['return']);\n\t\tif(!returnAllInputs&&!returnAllVariables&&returnNodes.length<1)warnings+='\\nNo return tags found and neither returning all inputs nor returning all variables, nothing will be replaced';\n\t\tif(returnNodes.filter(returnNode=>returnNode?.[':@']?.type&&returnNode?.[':@']?.type!=='string'&&returnNodes[0]?.[':@']?.type!=='OOXML')){\n\t\t\terrors+='\\nThe return type must be either string or OOXML';\n\t\t}\n\t\tif(returnNodes.filter(returnNode=>!returnNode?.[':@']?.variable).length>0){\n\t\t\terrors+='\\nNo variable specified in return tag';\n\t\t}\n\t\tif(errors)return{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns,\n\t\t\toutputDocumentTag,\n\t\t\treturnAllInputs,\n\t\t\treturnAllVariables\n\t\t};\n\t\toutputReturns=returnNodes.map(returnNode=>({\n\t\t\ttype:returnNode?.[':@']?.type==='OOXML'?'OOXML':'string',\n\t\t\tvariable:returnNode[':@'].variable,\n\t\t\t...(returnNode?.[':@']?.replace?{replace:returnNode?.[':@']?.replace}:{})\n\t\t}));\n\t\treturn{\n\t\t\terrors,\n\t\t\twarnings,\n\t\t\toutputReturns,\n\t\t\toutputDocumentTag,\n\t\t\treturnAllInputs,\n\t\t\treturnAllVariables\n\t\t};\n\t}\n\n\tsetParseOutputReturn(parseOutputReturn:ParseOutputReturn){\n\t\tif(parseOutputReturn){\n\t\t\tthis.outputReturns=parseOutputReturn.outputReturns;\n\t\t\tif(parseOutputReturn.outputDocumentTag)this.outputDocumentTag=parseOutputReturn.outputDocumentTag;\n\t\t\tthis.returnAllInputs=parseOutputReturn.returnAllInputs===false?false:true;\n\t\t\tthis.returnAllVariables=parseOutputReturn.returnAllVariables===false?false:true;\n\t\t}\n\t}\n};\n\nexport default LegaldacDocumentXmlScript;","import type libarchive_js from 'libarchive.js';\nimport type {ArchiveReader} from 'libarchive.js/dist/build/compiled/archive-reader';\nimport LegaldacDocumentXmlScript from './LegaldacDocumentXmlScript';\nimport ArchiveFolderClauseRepository from './ArchiveFolderClauseRepository';\nimport type ArchiveFolder from '../interfaces/ArchiveFolder';\n\nexport class LegaldacDocument7Z{\n\tprotected file:File|null=null;\n\tprotected archive:ArchiveReader|null=null;\n\tprotected archiveFiles:ArchiveFolder|null=null;\n\tprotected ldxs:LegaldacDocumentXmlScript|null=null;\n\n\tasync load(file:File){\n\t\tthis.file=file;\n\t\tconst libarchive:typeof libarchive_js=await import(typeof window==='undefined'?'libarchive.js/dist/libarchive-node.mjs':'libarchive.js');\n\t\tlet archive=await libarchive.Archive.open(file);\n\t\tlet archiveFiles:ArchiveFolder=await archive.extractFiles();\n\t\tlet ldxsFilenames=Object.keys(archiveFiles).filter(filename=>filename.toLowerCase().endsWith('.ldxs')&&archiveFiles[filename] instanceof File);\n\t\tif(ldxsFilenames.length<1)throw new Error('No LDXS LEGAL-DAC Document XML Script found');\n\t\tif(ldxsFilenames.length>1)throw new Error('More than 1 LDXS LEGAL-DAC Document XML Script found when only 1 is allowed');\n\t\tlet ldxs=new LegaldacDocumentXmlScript();\n\t\tlet ldxsFile:File=archiveFiles[ldxsFilenames[0]] as File;\n\t\tawait ldxs.parse(await ldxsFile.text(),new ArchiveFolderClauseRepository(archiveFiles));\n\t\t//parse successful as there was no error\n\t\tthis.file=file;\n\t\tthis.archive=archive;\n\t\tthis.archiveFiles=archiveFiles;\n\t\tthis.ldxs=ldxs;\n\t}\n};\n\nexport default LegaldacDocument7Z;","import esMain from 'es-main';\nimport {cli} from './exports';\n\nexport * from './exports';\nexport * as default from './exports';\n\nif(esMain(import.meta))cli();"],"names":["cli","Command","package_json","ArchiveFolderClauseRepository","archiveFiles","clauseReference","errors","semver","matchingFolders","filename","folder1","folder2","identifier","i","lcxsFilenames","lcxs","scriptFilenames","results","scriptFilename","result","rejected","index","I","E","m","s","u","_LegaldacXmlScript","__publicField","xml","clauseRepository","rootNodeName","warnings","parsedXml","rootNodes","node","version","legaldacversion","rootNode","clausesNodes","clauseReferences","clauseDatas","clauseReferenceNodes","clauseReferenceNode","inputParameters","parseOutputReturn","generationNodes","inputNodes","parameterNodes","name","inputParameter","type","prompt","text","XMLParser","LegaldacXmlScript","LegaldacClauseXmlScript","outputReturns","outputNodes","returnNodes","returnNode","d","y","l","n","t","LegaldacDocumentXmlScript","returnAllInputs","returnAllVariables","documentNodes","outputDocumentTag","h","LegaldacDocument7Z","file","archive","ldxsFilenames","ldxs","ldxsFile","esMain"],"mappings":"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"}